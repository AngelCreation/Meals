package ios.service;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.json.JSONException;
import org.json.JSONObject;

public class BusinessModel {
	
	private Connection con;
	
	public Connection getConnection() {
		try {
			Class.forName("com.mysql.jdbc.Driver");
			return DriverManager.getConnection("jdbc:mysql://10.100.112.1:3306/alltestapp", "root", "root" );
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
		return null;
	}
	
	public List<MealsBean> getAllMeals() {
		
		if (con == null) {
			con = getConnection();
		}
		
		List<MealsBean> list = null;		
		try {			
			PreparedStatement ps=null;	
			 
		    ps=con.prepareStatement("select * from `alltestapp`.`meal`");	
	 
			ResultSet res = ps.executeQuery();
			
			list = new ArrayList();
			
			while(res.next())
			{
				MealsBean mealsBean = new MealsBean();
				mealsBean.setId(res.getInt("id"));
				mealsBean.setName(res.getString("name"));
				mealsBean.setRating(res.getInt("rating"));
				mealsBean.setPath(res.getString("imgpath"));
				list.add(mealsBean);
			}
			
			ps.close();
			con.close();	
			return list;
		} catch (Exception e) {
			e.printStackTrace();
		}
		
//		ListBean listbean = new ListBean();
//		listbean.setList(list);
//		return listbean;
		return null;
	}
	
	public MealsBean addMeal(MealsBean mealsBean) {
		int count = 0;
		if (con == null) {
			con = getConnection();
		}
		
		try{
			String s = "INSERT INTO `alltestapp`.`meal` (`name`,`rating`) VALUES(?,?);";
			PreparedStatement ps=con.prepareStatement(s);
			ps.setString(1, mealsBean.getName());
			ps.setInt(2, mealsBean.getRating());
			
			count = ps.executeUpdate();
			
			ps.close();
			con.close();		
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		MealsBean mb = new MealsBean();

			if(count > 0){				
				mb.setResult("true");				
				
			} else {
				mb.setResult("false");			
			} 
		
		return mb;		
	}
	
	public MealsBean addMealWithImage(String name,int rating,InputStream in,String filename)
	{
		int count = 0;
		if (con == null) {
			con = getConnection();
		}		
		
		String path = System.getProperty("catalina.base") + File.separator + ("wtpwebapps\\MealsWebService\\Images");
		File file = new File(path);
		
		if(!file.exists()){
			file.mkdir();
		}
		System.out.println("FILENAME ::: " + filename);
		String[] parts = filename.split("(?=\\.)");
		//System.out.println(parts[0]);
		//System.out.println(parts[1]);
		
		
		String pathtosave = "Images/" +  new SimpleDateFormat("ddMMyyhhmmss").format(new Date()) + parts[1];
		try {
			String absPath = System.getProperty("catalina.base") + File.separator + ("wtpwebapps\\MealsWebService\\") + pathtosave;
			File myFile = new File(absPath);
			OutputStream out = new FileOutputStream(myFile);
			int read = 0;
			byte[] bytes = new byte[1024];

			//out = new FileOutputStream(new File(path));
			
				while ((read = in.read(bytes)) != -1) {
					out.write(bytes, 0, read);
				}
			
			out.flush();
			out.close();
			
			//System.out.println(absPath);
			//return absPath;
			String s = "INSERT INTO `alltestapp`.`meal` (`name`,`rating`,`imgpath`) VALUES(?,?,?);";
			PreparedStatement ps=con.prepareStatement(s);
			ps.setString(1, name);
			ps.setInt(2, rating);
			ps.setString(3, pathtosave);
			count = ps.executeUpdate();
			
			ps.close();
			con.close();	
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		/*//to insert null imagepath
		try {
		String s = "INSERT INTO `alltestapp`.`meal` (`name`,`rating`,`imgpath`) VALUES(?,?,?);";
		PreparedStatement ps=con.prepareStatement(s);
		ps.setString(1, name);
		ps.setInt(2, rating);
		ps.setString(3, null);
		count = ps.executeUpdate();
		
		ps.close();
		}  catch (Exception e) {
			e.printStackTrace();
		}*/
		
		MealsBean mb = new MealsBean();

		if(count > 0) {				
			mb.setResult("true");				
			
		} else {
			mb.setResult("false");			
		} 
	
		return mb;		
	}
	
	public MealsBean updateMeal(int id,String name,int rating,InputStream in,String filename){
		int count = 0;
		if (con == null) {
			con = getConnection();
		}
		
		String path = System.getProperty("catalina.base") + File.separator + ("wtpwebapps\\MealsWebService\\Images");
		File file = new File(path);
		
		if(!file.exists()){
			file.mkdir();
		}
		System.out.println(filename);
		String[] parts = filename.split("(?=\\.)");
		//System.out.println(parts[0]);
		//System.out.println(parts[1]);
		
		
		String pathtosave = "Images/" +  new SimpleDateFormat("ddMMyyhhmmss").format(new Date()) + parts[1];
		
		
		try{
			
			String absPath = System.getProperty("catalina.base") + File.separator + ("wtpwebapps\\MealsWebService\\") + pathtosave;
			File myFile = new File(absPath);
			OutputStream out = new FileOutputStream(myFile);
			int read = 0;
			byte[] bytes = new byte[1024];

			//out = new FileOutputStream(new File(path));
			while ((read = in.read(bytes)) != -1) {
				out.write(bytes, 0, read);
			}
			out.flush();
			out.close();
			
			String s = "UPDATE `alltestapp`.`meal` SET `name` = ?, `rating` = ?, `imgpath` = ? WHERE `id` = ?";
			PreparedStatement ps=con.prepareStatement(s);
			ps.setString(1, name);
			ps.setInt(2, rating);
			ps.setString(3, pathtosave);
			ps.setInt(4, id);
			
			count = ps.executeUpdate();	
									
			ps.close();
			con.close();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		MealsBean mb = new MealsBean();

			if(count > 0){				
				mb.setResult("true");				
				
			} else {
				mb.setResult("false");			
			} 
		
		return mb;		
	}
	
	public MealsBean deleteMeal(MealsBean mealsBean) {
		int count = 0;
		if (con == null) {
			con = getConnection();
		}
		
		String s = "DELETE FROM `alltestapp`.`meal` WHERE `id` = ?;";
		try {
			PreparedStatement ps= con.prepareStatement(s);
			ps.setInt(1, mealsBean.getId());
			count = ps.executeUpdate();	
			
			ps.close();
			con.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		MealsBean mb = new MealsBean();

		if(count > 0) {				
			mb.setResult("true");				
			
		} else {
			mb.setResult("false");			
		} 
	
		return mb;		
	}	
	
}
